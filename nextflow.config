/*
 * -------------------------------------------------
 * Nextflow config file for Layer Lab DNA Seq
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the configuration folder and imported under a
 * profile name here.
 */

manifest {
  author = 'Mahmood Javaid'
  description = 'Layer Lab, CU Boulder - Workflow For DNA Seq Variant Calling'
  homePage = 'http://layerlab.org'
  mainScript = 'main.nf'
  name = 'javaidmj/LLSeqAnalysis'
  nextflowVersion = '>=19.10.0'
  version = '0.1'
}

// Global default params, used in configs
params {

  // Workflow flags
  debug = false
  filter_bams = false
  bam_mapping_q = 40
  remove_supplementary_reads = null
  annotate_tools = null // Only with --step annotate
  read_count_pon = null
  somatic_pon = null
  cnvkit_ref = null
  somatic_pon_index = null
  genome = 'GRCh38'
  input = null // No default input
  no_gvcf = null // g.vcf are produced by HaplotypeCaller
  noStrelkaBP = null // Strelka will use Manta candidateSmallIndels if available
  no_intervals = null // Intervals will be built from the fasta file
  skip_qc = null // All QC tools are used
  step = 'mapping' // Starts with mapping
  tools = null // No default Variant Calling or Annotation tools
  ac_loci_GC = null
  // Workflow settings
  annotation_cache = null // Annotation cache disabled
  //cadd_cache = null // CADD cache disabled
  //genesplicer = null // genesplicer disabled
  //markdup_java_options = '"-Xms4000m -Xmx7g"' //Established values for markDuplicate memory consumption, see https://github.com/SciLifeLab/Sarek/pull/689 for details
  nucleotides_per_second = 1000.0 // Default interval size
  split_fastq = null // Fastq files will not be split by default
  outdir = './results'
  publish_dir_mode = 'symlink' // Default PublishDirMode (same as other nf-core pipelines)
  save_genome_index = null // Built Indexes not saved
  sequencing_center = null // No sequencing center to be written in BAM header in MapReads process
  //sentieon = null // Not using Sentieon by default

  // Optional files/directory
  cadd_InDels = false // No CADD InDels file
  cadd_InDels_tbi = false // No CADD InDels index
  cadd_WG_SNVs = false // No CADD SNVs file
  cadd_WG_SNVs_tbi = false // No CADD SNVs index
  pon = false // No default PON (Panel of Normals) file for GATK Mutect2 / Sentieon TNscope
  pon_index = false // No default PON index for GATK Mutect2 / Sentieon TNscope
  read_count_somatic_pon = false // No default PON (Panel of Normals) file for GATK Somatic CNV
  read_count_somatic_pon_index = false // No default PON (Panel of Normals) file for GATK Somatic CNV index
  snpEff_cache = null // No directory for snpEff cache
  snpEff_db = null // No directory for snpEff cache
  target_bed = false // No default TargetBED file for targeted sequencing
  padded_target_bed = false // No default TargetBED file for targeted sequencing
  bait_bed = false // No default TargetBED file for targeted sequencing
  exome = false
  //vep_cache = null // No directory for VEP cache

  // Custom config
  config_profile_contact = false
  config_profile_description = false
  config_profile_url = false
  custom_config_version = 'master'
  custom_config_base = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"

  // Reference genomes
  //igenomes_ignore = false
  //igenomes_base = 's3://ngi-igenomes/igenomes/'
  genomes_base= '/scratch/Shares/layer/ref/igenomes'
  //genomes_base= '/Shares/layer_shared/ref/igenomes'
  // Default
  help = false
  hostnames = false
  monochrome_logs = false // Monochrome logs disabled
  multiqc_config = "${baseDir}/assets/multiqc_config.yaml" // Default multiqc config
  name = false // No default name
  tracedir = "${params.outdir}/pipeline_info"

  // email
  email = false // No default email
  max_multiqc_email_file_size = 25.MB
  plaintext_email = false // Plaintext email disabled

  // Base specifications
  cpus = 8 
  max_cpus = 64
  max_memory = 512.GB
  max_time = 240.h
  single_cpu_mem = 7.GB
}

// Container slug
// Stable releases should specify release tag (ie: `2.5`)
// Developmental code should specify dev
//process.container = 'nfcore/sarek:2.5.2'

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'
includeConfig 'conf/genomes.config'

profiles {
  fiji {
    includeConfig 'conf/fiji.config'
  }
  mendel {
    includeConfig 'conf/mendel.config'
  }
  conda {
    docker.enabled = false
    process.conda = "$baseDir/environment.yml"
    singularity.enabled = false
  }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  docker {
    docker {
      enabled = true
      fixOwnership = true
      runOptions = "-u \$(id -u):\$(id -g)"
    }
    singularity.enabled = false
  }
  singularity {
    docker.enabled = false
    singularity.autoMounts = true
    singularity.enabled = true
  }
  test { 
    includeConfig 'conf/fiji.config' 
    includeConfig 'conf/test.config' 
  }
  /*
  test_annotation { includeConfig 'conf/test_annotation.config' }
  test_splitfastq { includeConfig 'conf/test_splitfastq.config' }
  test_targeted { includeConfig 'conf/test_targeted.config' }
  test_tool { includeConfig 'conf/test_tool.config' }
  */
}

// Load genomes.config or igenomes.config

/*
if (!params.igenomesIgnore) {
  includeConfig 'conf/igenomes.config'
} else {
  includeConfig 'conf/genomes.config'
}
*/

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.svg"
}



// Return the minimum between requirements and a maximum limit to ensure that resource requirements don't go over
def check_resource(obj) {
    try {
      if (obj.getClass() == nextflow.util.MemoryUnit && obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else if (obj.getClass() == nextflow.util.Duration && obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else if (obj.getClass() == java.lang.Integer)
        return Math.min(obj, params.max_cpus as int)
      else
        return obj
    } catch (all) {
        println "   ### ERROR ###   Max params max_memory:'${params.max_memory}', max_time:'${params.max_time}' or max_cpus:'${params.max_cpus}'  is not valid! Using default value: $obj"
    }
}
